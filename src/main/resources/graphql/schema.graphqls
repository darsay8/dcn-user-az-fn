type RoleDTO {
  roleId: ID!
  name: String!
}

type UserDTO {
  userId: ID!
  username: String!
  email: String!
  password: String!
  role: RoleDTO!
}

type Query {
  getUser(id: ID!): UserDTO
  getAllUsers: [UserDTO]!
  getRole(id: ID!): RoleDTO
  getAllRoles: [RoleDTO]!
}

type Mutation {
  saveUser(input: UserInput!): UserDTO!
  updateUser(id: ID!, input: UserUpdateInput!): UserDTO!
  deleteUser(id: ID!): Boolean!
  saveRole(input: RoleInput!): RoleDTO!
  updateRole(id: ID!, input: RoleInput!): RoleDTO!
  deleteRole(id: ID!): Boolean!
}

input RoleInput {
  name: String!
}

input UserInput {
  username: String!
  email: String!
  password: String!
  roleId: ID!
}

input UserUpdateInput {
  username: String
  email: String
  password: String
  roleId: ID
}
